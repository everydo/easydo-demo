// Generated by CoffeeScript 1.7.1
(function() {
  define(['underscore', 'marionette', 'backbone', 'app', 'components/tree/controller', 'apps/account/orgtree/left_view', 'apps/account/orgtree/node_content_view', 'apps/account/orgtree/root_content_view'], function(_, Marionette, Backbone, App, TreeComponent, LeftView, NodeContentView, RootContentView) {
    var Controller;
    Controller = {
      orgTreeApp: function() {
        var leftView, that;
        leftView = new LeftView();
        App.pageleft.show(leftView);
        this.treeView = new TreeComponent({
          checkable: true,
          css: 'js/components/tree/css/navtree.css',
          is_static: false
        });
        this.treeView.render('#orgtree');
        this.treeView.on('load', this.loadNodes);
        $.when(App.request('orgtree:entities', '/orgtree.json').then(_.bind(this.showTree, this)));
        that = this;
        this.treeView.on('clicknode', function(nodeView) {
          App.router.navigate('account-orgtree-' + nodeView.model.get('id'), {
            trigger: true
          });
        });
        leftView.on('showCheckedList', function() {
          console.log(that.treeView.get_checked());
        });
        leftView.on('getNode', function() {
          var nodeId, nodeView;
          nodeId = prompt('输入nodeId');
          nodeView = that.treeView.get_node(nodeId);
          console.log(nodeView);
          nodeView.activate();
        });
        leftView.on('expandNode', function() {
          that.treeView.get_node_by_path([0, 1, 11], function(node) {
            node.activate();
          });
        });
      },
      showTree: function(orgtree) {
        var treedata;
        treedata = orgtree;
        this.treeView.load_nodes(treedata);
      },
      loadNodes: function(nodeView, nodeModel) {
        var load, url;
        load = function(data) {
          var nodeDate;
          nodeDate = data;
          nodeView.load_nodes(data);
        };
        url = '/' + nodeModel.get('id') + '.json';
        $.when(App.request('orgtree:entities', url).then(load));
      },
      treeNode: function(id) {
        var contentview;
        contentview = new NodeContentView();
        App.pagecontent.show(contentview);
        this.treeView.get_node_by_path([0, id], function(node) {
          node.activate();
        });
      },
      treeRoot: function() {
        var contentview;
        contentview = new RootContentView();
        App.pagecontent.show(contentview);
      }
    };
    return Controller;
  });

}).call(this);
