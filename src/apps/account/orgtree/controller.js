// Generated by CoffeeScript 1.7.1
define(['underscore', 'marionette', 'backbone', 'app', 'components/tree/controller', 'apps/account/orgtree/left_view', 'apps/account/orgtree/node_content_view', 'apps/account/orgtree/root_content_view'], function(_, Marionette, Backbone, App, TreeComponent, LeftView, NodeContentView, RootContentView) {
  var Controller;
  return Controller = {
    orgTreeApp: function() {
      var leftView, that;
      leftView = new LeftView();
      App.pageleft.show(leftView);
      this.treeView = new TreeComponent({
        checkable: true,
        css: 'src/components/tree/css/navtree.css',
        is_static: false
      });
      this.treeView.render('#orgtree');
      this.treeView.on('load', this.loadNodes);
      $.when(App.request('orgtree:entities', 'api/orgtree.json')).then(_.bind(this.showTree, this));
      that = this;
      this.treeView.on('clicknode', function(nodeView) {
        return App.router.navigate('account-orgtree-' + nodeView.model.get('id'), {
          trigger: true
        });
      });
      leftView.on('showCheckedList', function() {
        return console.log(that.treeView.get_checked());
      });
      leftView.on('getNode', function() {
        var nodeId, nodeView;
        nodeId = prompt('输入nodeId');
        nodeView = that.treeView.get_node(nodeId);
        console.log(nodeView);
        return nodeView.activate();
      });
      return leftView.on('expandNode', function() {
        return that.treeView.get_node_by_path([0, 1, 11], function(node) {
          return node.activate();
        });
      });
    },
    showTree: function(orgtree) {
      var treedata;
      treedata = orgtree;
      return this.treeView.load_nodes(treedata);
    },
    loadNodes: function(nodeView, nodeModel) {
      var load, url;
      load = function(data) {
        var nodeDate;
        nodeDate = data;
        return nodeView.load_nodes(data);
      };
      url = 'api/' + nodeModel.get('id') + '.json';
      return $.when(App.request('orgtree:entities', url)).then(load);
    },
    treeNode: function(id) {
      var contentview;
      contentview = new NodeContentView();
      App.pagecontent.show(contentview);
      return this.treeView.get_node_by_path([0, id], function(node) {
        return node.activate();
      });
    },
    treeRoot: function() {
      var contentview;
      contentview = new RootContentView();
      return App.pagecontent.show(contentview);
    }
  };
});
