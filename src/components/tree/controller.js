// Generated by CoffeeScript 1.7.1
define(['underscore', 'marionette', 'backbone', 'components/tree/nav_root_view', 'components/tree/tree_node_collection', 'components/tree/tree_node_model'], function(_, Marionette, Backbone, NavRootView, TreeNodeCollection, TreeNodeModel) {
  var Controller;
  return Controller = Marionette.Controller.extend({
    initialize: function(options) {
      this.checkable = options.checkable;
      this.css = options.css;
      this.is_static = options.is_static;
      this.treeView = new NavRootView({
        collection: new TreeNodeCollection(),
        controller: this
      });
      this.treeView.loadCss(this.css);
      this.checkedNode = {};
      return this.nodeList = {};
    },
    load_nodes: function(data) {
      this.treeView.collection.add(data);
      this.treeView.collapse(this);
      if (this.loaded_callback) {
        this.loaded_callback(this);
        return this.loaded_callback = null;
      }
    },
    render: function(dom) {
      this.treeView.render();
      return $(dom).html(this.treeView.el);
    },
    get_checked: function() {
      return this.checkedNode;
    },
    get_activated: function() {
      return this.currentNode;
    },
    get_node: function(node_id) {
      return this.nodeList[node_id];
    },
    _onGotNode: function(node) {
      var next_node, that, _gotNode;
      if (!this.node_ids.length) {
        return this.on_loaded(node);
      } else {
        that = this.that;
        _gotNode = _.bind(that._onGotNode, {
          on_loaded: this.on_loaded,
          that: that,
          node_ids: this.node_ids.slice(1)
        });
        next_node = that.get_node(this.node_ids[0]);
        return next_node.expand(_gotNode);
      }
    },
    get_node_by_path: function(node_ids, on_loaded) {
      var _gotNode;
      _gotNode = _.bind(this._onGotNode, {
        on_loaded: on_loaded,
        that: this,
        node_ids: node_ids
      });
      if (!this.treeView.collection.length) {
        return this.loaded_callback = _gotNode;
      } else {
        return _gotNode(this);
      }
    }
  });
});
